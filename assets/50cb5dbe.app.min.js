define("appkit/adapters/application",["exports"],function(a){"use strict";a["default"]=DS.FixtureAdapter.extend()}),define("appkit/app",["ember/resolver","emberui","exports"],function(a,b,c){"use strict";{var d,e=a["default"];b["default"]}d=Ember.Application.extend({LOG_ACTIVE_GENERATION:!0,LOG_MODULE_RESOLVER:!0,LOG_TRANSITIONS:!0,LOG_TRANSITIONS_INTERNAL:!0,LOG_VIEW_LOOKUPS:!0,modulePrefix:"appkit",Resolver:e["default"]}),c["default"]=d}),define("appkit/controllers/application",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({showNavigation:!1,currentPathChanged:function(){return window.scrollTo(0,0),this.set("showNavigation",!1)}.observes("currentPath")}),a["default"]=b}),define("appkit/controllers/documentation/calendar",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({selectedDates:[moment("2014-04-25"),moment("2014-04-26")],disabledDates:[moment("2014-04-25"),moment("2014-04-26")]}),a["default"]=b}),define("appkit/controllers/documentation/dropbutton",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({options:[Ember.Object.create({label:"Save",action:"save"}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],optionsNoLabel:[Ember.Object.create({action:"save"}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],optionsPrimary:[Ember.Object.create({label:"Save",action:"save",primary:!0}),Ember.Object.create({label:"Delete",action:"delete"}),Ember.Object.create({label:"Edit",action:"edit"})],optionsContext:[Ember.Object.create({label:"Save",action:"saveItem",primary:!0}),Ember.Object.create({label:"Delete",action:"deleteItem"}),Ember.Object.create({label:"Edit",action:"editItem"})]}),a["default"]=b}),define("appkit/controllers/documentation/errorhandling",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({email:"john@example",emailValid:function(){var a,b;return b=/^[^@]+@[^@]+\.[^@\.]{2,}$/,a=this.get("email"),a.match(b)?void 0:"We need a valid email address"}.property("email")}),a["default"]=b}),define("appkit/controllers/documentation/modal",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({showFirstModal:!1}),a["default"]=b}),define("appkit/controllers/documentation/select",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({bigOptionList:[],countries:[{label:"Canada",value:1},{label:"United Sates",value:2},{label:"Mexico",value:3}],users:[Ember.Object.create({name:"John",email:"john@gmail.com",value:"1"}),Ember.Object.create({name:"Mark",email:"mark@gmail.com",value:"2"}),Ember.Object.create({name:"Richard",email:"richard@gmail.com",value:"3"})],fullCountryList:[{name:"Afghanistan",code:"AF"},{name:"Ã…land Islands",code:"AX"},{name:"Albania",code:"AL"},{name:"Algeria",code:"DZ"},{name:"American Samoa",code:"AS"},{name:"Andorra",code:"AD"},{name:"Angola",code:"AO"},{name:"Anguilla",code:"AI"},{name:"Antarctica",code:"AQ"},{name:"Antigua and Barbuda",code:"AG"},{name:"Argentina",code:"AR"},{name:"Armenia",code:"AM"},{name:"Aruba",code:"AW"},{name:"Australia",code:"AU"},{name:"Austria",code:"AT"},{name:"Azerbaijan",code:"AZ"},{name:"Bahamas",code:"BS"},{name:"Bahrain",code:"BH"},{name:"Bangladesh",code:"BD"},{name:"Barbados",code:"BB"},{name:"Belarus",code:"BY"},{name:"Belgium",code:"BE"},{name:"Belize",code:"BZ"},{name:"Benin",code:"BJ"},{name:"Bermuda",code:"BM"},{name:"Bhutan",code:"BT"},{name:"Bolivia",code:"BO"},{name:"Bosnia and Herzegovina",code:"BA"},{name:"Botswana",code:"BW"},{name:"Bouvet Island",code:"BV"},{name:"Brazil",code:"BR"},{name:"British Indian Ocean Territory",code:"IO"},{name:"Brunei Darussalam",code:"BN"},{name:"Bulgaria",code:"BG"},{name:"Burkina Faso",code:"BF"},{name:"Burundi",code:"BI"},{name:"Cambodia",code:"KH"},{name:"Cameroon",code:"CM"},{name:"Canada",code:"CA"},{name:"Cape Verde",code:"CV"},{name:"Cayman Islands",code:"KY"},{name:"Central African Republic",code:"CF"},{name:"Chad",code:"TD"},{name:"Chile",code:"CL"},{name:"China",code:"CN"},{name:"Christmas Island",code:"CX"},{name:"Cocos (Keeling) Islands",code:"CC"},{name:"Colombia",code:"CO"},{name:"Comoros",code:"KM"},{name:"Congo",code:"CG"},{name:"Congo, The Democratic Republic of the",code:"CD"},{name:"Cook Islands",code:"CK"},{name:"Costa Rica",code:"CR"},{name:"Cote D'Ivoire",code:"CI"},{name:"Croatia",code:"HR"},{name:"Cuba",code:"CU"},{name:"Cyprus",code:"CY"},{name:"Czech Republic",code:"CZ"},{name:"Denmark",code:"DK"},{name:"Djibouti",code:"DJ"},{name:"Dominica",code:"DM"},{name:"Dominican Republic",code:"DO"},{name:"Ecuador",code:"EC"},{name:"Egypt",code:"EG"},{name:"El Salvador",code:"SV"},{name:"Equatorial Guinea",code:"GQ"},{name:"Eritrea",code:"ER"},{name:"Estonia",code:"EE"},{name:"Ethiopia",code:"ET"},{name:"Falkland Islands (Malvinas)",code:"FK"},{name:"Faroe Islands",code:"FO"},{name:"Fiji",code:"FJ"},{name:"Finland",code:"FI"},{name:"France",code:"FR"},{name:"French Guiana",code:"GF"},{name:"French Polynesia",code:"PF"},{name:"French Southern Territories",code:"TF"},{name:"Gabon",code:"GA"},{name:"Gambia",code:"GM"},{name:"Georgia",code:"GE"},{name:"Germany",code:"DE"},{name:"Ghana",code:"GH"},{name:"Gibraltar",code:"GI"},{name:"Greece",code:"GR"},{name:"Greenland",code:"GL"},{name:"Grenada",code:"GD"},{name:"Guadeloupe",code:"GP"},{name:"Guam",code:"GU"},{name:"Guatemala",code:"GT"},{name:"Guernsey",code:"GG"},{name:"Guinea",code:"GN"},{name:"Guinea-Bissau",code:"GW"},{name:"Guyana",code:"GY"},{name:"Haiti",code:"HT"},{name:"Heard Island and Mcdonald Islands",code:"HM"},{name:"Holy See (Vatican City State)",code:"VA"},{name:"Honduras",code:"HN"},{name:"Hong Kong",code:"HK"},{name:"Hungary",code:"HU"},{name:"Iceland",code:"IS"},{name:"India",code:"IN"},{name:"Indonesia",code:"ID"},{name:"Iran, Islamic Republic Of",code:"IR"},{name:"Iraq",code:"IQ"},{name:"Ireland",code:"IE"},{name:"Isle of Man",code:"IM"},{name:"Israel",code:"IL"},{name:"Italy",code:"IT"},{name:"Jamaica",code:"JM"},{name:"Japan",code:"JP"},{name:"Jersey",code:"JE"},{name:"Jordan",code:"JO"},{name:"Kazakhstan",code:"KZ"},{name:"Kenya",code:"KE"},{name:"Kiribati",code:"KI"},{name:"Korea, Democratic People'S Republic of",code:"KP"},{name:"Korea, Republic of",code:"KR"},{name:"Kuwait",code:"KW"},{name:"Kyrgyzstan",code:"KG"},{name:"Lao People'S Democratic Republic",code:"LA"},{name:"Latvia",code:"LV"},{name:"Lebanon",code:"LB"},{name:"Lesotho",code:"LS"},{name:"Liberia",code:"LR"},{name:"Libyan Arab Jamahiriya",code:"LY"},{name:"Liechtenstein",code:"LI"},{name:"Lithuania",code:"LT"},{name:"Luxembourg",code:"LU"},{name:"Macao",code:"MO"},{name:"Macedonia, The Former Yugoslav Republic of",code:"MK"},{name:"Madagascar",code:"MG"},{name:"Malawi",code:"MW"},{name:"Malaysia",code:"MY"},{name:"Maldives",code:"MV"},{name:"Mali",code:"ML"},{name:"Malta",code:"MT"},{name:"Marshall Islands",code:"MH"},{name:"Martinique",code:"MQ"},{name:"Mauritania",code:"MR"},{name:"Mauritius",code:"MU"},{name:"Mayotte",code:"YT"},{name:"Mexico",code:"MX"},{name:"Micronesia, Federated States of",code:"FM"},{name:"Moldova, Republic of",code:"MD"},{name:"Monaco",code:"MC"},{name:"Mongolia",code:"MN"},{name:"Montserrat",code:"MS"},{name:"Morocco",code:"MA"},{name:"Mozambique",code:"MZ"},{name:"Myanmar",code:"MM"},{name:"Namibia",code:"NA"},{name:"Nauru",code:"NR"},{name:"Nepal",code:"NP"},{name:"Netherlands",code:"NL"},{name:"Netherlands Antilles",code:"AN"},{name:"New Caledonia",code:"NC"},{name:"New Zealand",code:"NZ"},{name:"Nicaragua",code:"NI"},{name:"Niger",code:"NE"},{name:"Nigeria",code:"NG"},{name:"Niue",code:"NU"},{name:"Norfolk Island",code:"NF"},{name:"Northern Mariana Islands",code:"MP"},{name:"Norway",code:"NO"},{name:"Oman",code:"OM"},{name:"Pakistan",code:"PK"},{name:"Palau",code:"PW"},{name:"Palestinian Territory, Occupied",code:"PS"},{name:"Panama",code:"PA"},{name:"Papua New Guinea",code:"PG"},{name:"Paraguay",code:"PY"},{name:"Peru",code:"PE"},{name:"Philippines",code:"PH"},{name:"Pitcairn",code:"PN"},{name:"Poland",code:"PL"},{name:"Portugal",code:"PT"},{name:"Puerto Rico",code:"PR"},{name:"Qatar",code:"QA"},{name:"Reunion",code:"RE"},{name:"Romania",code:"RO"},{name:"Russian Federation",code:"RU"},{name:"RWANDA",code:"RW"},{name:"Saint Helena",code:"SH"},{name:"Saint Kitts and Nevis",code:"KN"},{name:"Saint Lucia",code:"LC"},{name:"Saint Pierre and Miquelon",code:"PM"},{name:"Saint Vincent and the Grenadines",code:"VC"},{name:"Samoa",code:"WS"},{name:"San Marino",code:"SM"},{name:"Sao Tome and Principe",code:"ST"},{name:"Saudi Arabia",code:"SA"},{name:"Senegal",code:"SN"},{name:"Serbia and Montenegro",code:"CS"},{name:"Seychelles",code:"SC"},{name:"Sierra Leone",code:"SL"},{name:"Singapore",code:"SG"},{name:"Slovakia",code:"SK"},{name:"Slovenia",code:"SI"},{name:"Solomon Islands",code:"SB"},{name:"Somalia",code:"SO"},{name:"South Africa",code:"ZA"},{name:"South Georgia and the South Sandwich Islands",code:"GS"},{name:"Spain",code:"ES"},{name:"Sri Lanka",code:"LK"},{name:"Sudan",code:"SD"},{name:"Suriname",code:"SR"},{name:"Svalbard and Jan Mayen",code:"SJ"},{name:"Swaziland",code:"SZ"},{name:"Sweden",code:"SE"},{name:"Switzerland",code:"CH"},{name:"Syrian Arab Republic",code:"SY"},{name:"Taiwan, Province of China",code:"TW"},{name:"Tajikistan",code:"TJ"},{name:"Tanzania, United Republic of",code:"TZ"},{name:"Thailand",code:"TH"},{name:"Timor-Leste",code:"TL"},{name:"Togo",code:"TG"},{name:"Tokelau",code:"TK"},{name:"Tonga",code:"TO"},{name:"Trinidad and Tobago",code:"TT"},{name:"Tunisia",code:"TN"},{name:"Turkey",code:"TR"},{name:"Turkmenistan",code:"TM"},{name:"Turks and Caicos Islands",code:"TC"},{name:"Tuvalu",code:"TV"},{name:"Uganda",code:"UG"},{name:"Ukraine",code:"UA"},{name:"United Arab Emirates",code:"AE"},{name:"United Kingdom",code:"GB"},{name:"United States",code:"US"},{name:"United States Minor Outlying Islands",code:"UM"},{name:"Uruguay",code:"UY"},{name:"Uzbekistan",code:"UZ"},{name:"Vanuatu",code:"VU"},{name:"Venezuela",code:"VE"},{name:"Viet Nam",code:"VN"},{name:"Virgin Islands, British",code:"VG"},{name:"Virgin Islands, U.S.",code:"VI"},{name:"Wallis and Futuna",code:"WF"},{name:"Western Sahara",code:"EH"},{name:"Yemen",code:"YE"},{name:"Zambia",code:"ZM"},{name:"Zimbabwe",code:"ZW"}]}),a["default"]=b}),define("appkit/controllers/index",["exports"],function(a){"use strict";var b;b=Ember.ObjectController.extend({showNavigation:!1,isDemoActive:!1}),a["default"]=b}),define("appkit/router",["exports"],function(a){"use strict";var b;b=Ember.Router.extend(),b.reopen({location:"history"}),b.map(function(){return this.resource("documentation",function(){return this.route("layout"),this.route("theming"),this.route("errorhandling"),this.route("button"),this.route("calendar"),this.route("checkbox"),this.route("dropbutton"),this.route("input"),this.route("modal"),this.route("select"),this.route("textarea")}),this.route("404",{path:"*path"})}),a["default"]=b}),define("appkit/routes/application",["exports"],function(a){"use strict";var b;b=Ember.Route.extend({actions:{toggleNavigation:function(){return this.toggleProperty("controller.showNavigation")}}}),a["default"]=b}),define("appkit/routes/documentation/button",["exports"],function(a){"use strict";var b;b=Ember.Route.extend({actions:{switchToLoading:function(){return this.get("controller").set("isLoading",!0)},switchToDisabled:function(){return this.get("controller").set("isDisabled",!0)},showAlert:function(){return alert("Showing Alert")}}}),a["default"]=b}),define("appkit/routes/documentation/dropbutton",["exports"],function(a){"use strict";var b;b=Ember.Route.extend({actions:{save:function(){return alert("Saving... ")},"delete":function(){return alert("Deleting... ")},edit:function(){return alert("Editing... ")},saveItem:function(a){return alert("Saving... "+a.item)},deleteItem:function(a){return alert("Deleting... "+a.item)},editItem:function(a){return alert("Editing... "+a.item)}}}),a["default"]=b}),define("appkit/routes/documentation/modal",["emberui/components/eui-modal","../../views/documentation/modal-example","exports"],function(a,b,c){"use strict";var d,e=a["default"],f=b["default"];d=Ember.Route.extend({actions:{showModal:function(){return e.show({targetObject:this,contentViewClass:f,content:{name:"Jaco",message:"This style is best for quick promts from the user."}})},showFullModal:function(){return e.show({targetObject:this,contentViewClass:f,content:{name:"Jaco",message:"This is a great style for more involved modals."},style:"full"})},toggleFirstModal:function(){return this.toggleProperty("controller.showFirstModal")},firstModalCancel:function(){return console.log("You pressed ESC to close the first modal")}}}),c["default"]=d}),define("appkit/routes/documentation/select",["exports"],function(a){"use strict";var b;b=Ember.Route.extend({actions:{generateOptions:function(){var a,b,c;for(a=[],b=c=5e3;c>=1;b=--c)a.push(Ember.Object.create({name:b,value:b}));return this.set("controller.bigOptionList",a)}}}),a["default"]=b}),define("appkit/routes/index",["exports"],function(a){"use strict";var b;b=Ember.Route.extend({deactivate:function(){var a;return a=this.get("controller"),a.setProperties({isDemoActive:!1})},actions:{showDemo:function(){return this.get("controller").set("isDemoActive",!0)},toggleNavigation:function(){return this.toggleProperty("controller.showNavigation")}}}),a["default"]=b}),define("appkit/utils/ajax",["exports"],function(a){"use strict";a["default"]=function(){return ic.ajax.apply(null,arguments)}}),define("appkit/views/application",["exports"],function(a){"use strict";var b;b=Ember.View.extend({classNames:["application-wrapper"]}),a["default"]=b}),define("appkit/views/documentation/modal-example",["appkit/templates/documentation/modal-example","exports"],function(a,b){"use strict";var c,d=a["default"];c=Ember.View.extend({template:d}),b["default"]=c}),define("appkit/views/index",["exports"],function(a){"use strict";var b;b=Ember.View.extend({classNames:["homepage"],didInsertElement:function(){return Ember.run.next(this,function(){return this.drawGradient()})},drawGradient:function(){var a,b,c,d,e,f;return a=document.getElementById("backgroundcanvas"),b=a.getContext("2d"),f=a.width,d=a.height,e=Math.sqrt(f*f+d*d)/1.7,c=new DitheredRadialGradient(f,d,0,f/2,d/1.3,e),c.addColorStop(0,239,247,252),c.addColorStop(.5,196,216,226),c.addColorStop(.7,21,96,173),c.addColorStop(.93,3,8,30),c.addColorStop(1,3,8,30),c.fillRect(b,0,0,f,d)}}),a["default"]=b}),define("appkit/templates/404",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push('<div class="container">\n  <h1>Page Not Found</h1>\n</div>\n')})}),define("appkit/templates/application",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div class="site-navigation">\n  <div class="container">\n    '),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{"class":"logo"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"EmberUI","index",h):j.call(b,"link-to","EmberUI","index",h)))),e.buffer.push('\n    <div class="show-links fa fa-bars fa-2x" '),e.buffer.push(k(c.action.call(b,"toggleNavigation",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["STRING"],data:e}))),e.buffer.push("></div>\n    <ul "),e.buffer.push(k(c["bind-attr"].call(b,{hash:{"class":"showNavigation:active"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[],types:[],data:e}))),e.buffer.push(">\n      <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Documentation","documentation",h):j.call(b,"link-to","Documentation","documentation",h)))),e.buffer.push('</li>\n      <li><a href="https://medium.com/emberui-updates/">Blog</a></li>\n      <li><a href="https://github.com/emberui/emberui">Fork it!</a></li>\n    </ul>\n  </div>\n</div>\n\n'),f=c._triageMustache.call(b,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push('\n\n<div class="site-navigation-bg"></div>\n'),i})}),define("appkit/templates/documentation",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div class="container">\n  <div class="docs-navigation">\n    <div class="mobile-float">\n      <ul>\n        <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Introduction","documentation.index",h):j.call(b,"link-to","Introduction","documentation.index",h)))),e.buffer.push('</li>\n      </ul>\n\n      <h6 class="fa fa-lightbulb-o">Concepts</h6>\n      <ul>\n        <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Layout","documentation.layout",h):j.call(b,"link-to","Layout","documentation.layout",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Theming","documentation.theming",h):j.call(b,"link-to","Theming","documentation.theming",h)))),e.buffer.push(" </li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Error Handling","documentation.errorhandling",h):j.call(b,"link-to","Error Handling","documentation.errorhandling",h)))),e.buffer.push('</li>\n      </ul>\n    </div>\n\n    <div class="mobile-float-right">\n      <h6 class="fa fa-puzzle-piece">Components</h6>\n      <ul>\n        <li>'),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Button","documentation.button",h):j.call(b,"link-to","Button","documentation.button",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Calendar","documentation.calendar",h):j.call(b,"link-to","Calendar","documentation.calendar",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Checkbox","documentation.checkbox",h):j.call(b,"link-to","Checkbox","documentation.checkbox",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Dropbutton","documentation.dropbutton",h):j.call(b,"link-to","Dropbutton","documentation.dropbutton",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Input","documentation.input",h):j.call(b,"link-to","Input","documentation.input",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Modal","documentation.modal",h):j.call(b,"link-to","Modal","documentation.modal",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Select","documentation.select",h):j.call(b,"link-to","Select","documentation.select",h)))),e.buffer.push("</li>\n        <li>"),e.buffer.push(k((g=c["link-to"]||b&&b["link-to"],h={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},g?g.call(b,"Textarea","documentation.textarea",h):j.call(b,"link-to","Textarea","documentation.textarea",h)))),e.buffer.push('</li>\n      </ul>\n    </div>\n\n  </div>\n\n  <div class="docs-content">\n    '),f=c._triageMustache.call(b,"outlet",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n  </div>\n</div>\n"),i})}),define("appkit/templates/documentation/button",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-button}}</h1>\n\n<div class="intro">\n  A reimplementation of the browser button tag that adds a loading state and support for icons.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-label">label</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-icon">icon</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n  <li><a href="#section-loading">loading</a></li>\n\n  <li class="header">Attributes</li>\n  <li><a href="#section-type">type</a></li>\n\n  <li class="header">Actions</li>\n  <li><a href="#section-action">action</a></li>\n</ul>\n\n\n<h4 id="section-class">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the button.\n</p>\n\n\n<h4 id="section-label">label <span>string</span></h4>\n<p>\n  The text displayed on the button.\n</p>\n\n<pre>{{eui-button label=\'Save Changes\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  The size of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-button label='Save Changes' size='tiny'}}\n{{eui-button label='Save Changes' size='small'}}\n{{eui-button label='Save Changes' size='medium'}}\n{{eui-button label='Save Changes' size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"tiny"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"small"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"medium"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",size:"large"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  The aesthetic style of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n  <li>primary</li>\n</ul>\n<p>\n  Additional styles can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-button label='Save Changes' style='default'}}\n{{eui-button label='Save Changes' style='primary'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",style:"default"},hashTypes:{label:"STRING",style:"STRING"},hashContexts:{label:b,style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",style:"primary"},hashTypes:{label:"STRING",style:"STRING"},hashContexts:{label:b,style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-icon\">icon <span>string</span></h4>\n<p>\n  Displays an icon in front of the label. If no label is set, the button will show up square with the icon centered.\n</p>\n<p>\n  Pass in a class that will get assgined to a <em>&lt;b&gt;</em> tag inside the button label. You can customize the icon with the css <em>:before</em> selector or set a background image on the tag if icon fonts are not used.\n</p>\n\n<pre>{{eui-button label='Settings' icon='fa fa-cog'}}\n{{eui-button icon='fa fa-cog'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Settings",icon:"fa fa-cog"},hashTypes:{label:"STRING",icon:"STRING"},hashContexts:{label:b,icon:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{icon:"fa fa-cog"},hashTypes:{icon:"STRING"},hashContexts:{icon:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  The example uses <a href=\"http://fontawesome.io/\">FontAwesome</a> for its icons.\n</p>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the button and prevents the action from firing if clicked.\n</p>\n\n<pre>{{eui-button label='Save Changes' disabled=true}}\n{{eui-button label='Click to Disable' disabled=isDisabled action='switchToDisabled'}}</pre>\n\n<pre>actions: {\n  switchToDisabled: function(controller) {\n    this.get(\"controller\").set('isDisabled', true);\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",disabled:!0},hashTypes:{label:"STRING",disabled:"BOOLEAN"},hashContexts:{label:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Click to Disable",disabled:"isDisabled",action:"switchToDisabled"},hashTypes:{label:"STRING",disabled:"ID",action:"STRING"},hashContexts:{label:b,disabled:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-loading\">loading <span>boolean</span></h4>\n<p>\n  If <em>loading</em> is set to true the <em>disabled</em> state is automatically activated as well and the loading state is entered. Upon entering the loading state the button label is faded out and the animation is faded in.\n</p>\n<p>\n  The button maintains its size during the loading phase. If the button is too small to show all three dots of the loading animation the amount of dots will be reduced until it fits.\n</p>\n\n<pre>{{eui-button label='Save Changes' loading=true}}\n{{eui-button label='Click to Load' loading=isLoading action='switchToLoading'}}</pre>\n\n<pre>actions: {\n  switchToLoading: function(controller) {\n    this.get(\"controller\").set('isLoading', true);\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Save Changes",loading:!0},hashTypes:{label:"STRING",loading:"BOOLEAN"},hashContexts:{label:b,loading:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Click to Load",loading:"isLoading",action:"switchToLoading"},hashTypes:{label:"STRING",loading:"ID",action:"STRING"},hashContexts:{label:b,loading:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-type">type <span>string</span></h4>\n<p>\n  Type of button. Set to submit if you want the button to submit a form on enter.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>button (default)</li>\n  <li>submit</li>\n</ul>\n\n\n<h4 id="section-action">action <span>string</span></h4>\n<p>\n  The action you want to trigger when the user clicks the button.\n</p>\n\n<pre>{{eui-button label=\'Show Alert\' action=\'showAlert\'}}</pre>\n\n<pre>actions: {\n  showAlert: function() {\n    alert("Showing Alert");\n  }\n}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Show Alert",action:"showAlert"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  The context of the button gets passed through with the click and allows you to pass through information that the action can act on.\n</p>\n\n<pre>{{eui-button label='Show Alert' action='deleteItem' itemToDelete=item}}</pre>\n\n<pre>actions: {\n  deleteItem: function(context) {\n    this.controller.get('items').removeObject(context.itemToDelete);\n  }\n}</pre>\n"),h})}),define("appkit/templates/documentation/calendar",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-calendar}}</h1>\n\n<div class="intro">\n  A date selector with a speedy month view.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-style">style</a></li>\n\n  <li class="header">Attributes</li>\n  <li><a href="#section-month">month</a></li>\n  <li><a href="#section-disableddates">disabledDates</a></li>\n  <li><a href="#section-disablefuture">disableFuture</a></li>\n  <li><a href="#section-disablemanipulation">disableManipulation</a></li>\n  <li><a href="#section-disablepast">disablePast</a></li>\n  <li><a href="#section-maxfuturedate">maxFutureDate</a></li>\n  <li><a href="#section-maxpastdate">maxPastDate</a></li>\n  <li><a href="#section-select">select</a></li>\n  <li><a href="#section-selecteddate">selectedDate</a></li>\n  <li><a href="#section-selecteddates">selectedDates</a></li>\n  <li><a href="#section-hownextmonth">showNextMonth</a></li>\n  <li><a href="#section-showpremonth">showPrevMonth</a></li>\n</ul>\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  The aesthetic style of the calendar.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n  <li>popup</li>\n</ul>\n\n<pre>{{eui-calendar style="default"}}\n{{eui-calendar style="popup"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{style:"default"},hashTypes:{style:"STRING"},hashContexts:{style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push(" <br/><br/>\n  "),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{style:"popup"},hashTypes:{style:"STRING"},hashContexts:{style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-month">month <span>monent</span></h4>\n<p>\n  The explicit month you want to render.\n</p>\n\n\n<h4 id="section-disableddates">disabledDates <span>array of monents</span></h4>\n<p>\n  Dates to indicate as disabled.\n</p>\n\n<pre>disabledDates: [\n  moment(\'2014-04-25\'),\n  moment(\'2014-04-26\')\n]</pre>\n\n<pre>{{eui-calendar disabledDatesBinding="disabledDates"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{disabledDatesBinding:"disabledDates"},hashTypes:{disabledDatesBinding:"STRING"},hashContexts:{disabledDatesBinding:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-disablefuture">disableFuture <span>boolean</span></h4>\n<p>\n  Prevents the user from navigating into the future. Defaults to false.\n</p>\n\n<pre>{{eui-calendar disableFuture=true}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{disableFuture:!0},hashTypes:{disableFuture:"BOOLEAN"},hashContexts:{disableFuture:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-disablemanipulation">disableManipulation <span>boolean</span></h4>\n<p>\n  Disable built-in manipulation of <em>selectedDate</em> / <em>selectedDates</em> select action still sent\n</p>\n\n\n<h4 id="section-disablepast">disablePast <span>boolean</span></h4>\n<p>\n  Prevents the user from navigating into the past. Defaults to false.\n</p>\n\n<pre>{{eui-calendar disablePast=true}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{disablePast:!0},hashTypes:{disablePast:"BOOLEAN"},hashContexts:{disablePast:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-maxfuturedate">maxFutureDate <span>moment</span></h4>\n<p>\n  Maximum future date.\n</p>\n\n\n<h4 id="section-maxpastdate">maxPastDate <span>moment</span></h4>\n<p>\n  Maximum future date.\n</p>\n\n\n<h4 id="section-select">select <span>action</span></h4>\n<p>\n  Will fire this event with the selected moment when the user selects a date\n</p>\n\n\n<h4 id="section-selecteddate">selectedDate <span>moment</span></h4>\n<p>\n  Date to indicate as selected.\n</p>\n\n\n<h4 id="section-selecteddates">selectedDates <span>array of moments</span></h4>\n<p>\n  Dates to indicate as selected, use this or the above, both won\'t work.\n</p>\n\n<pre>selectedDates: [\n  moment(\'2014-04-25\'),\n  moment(\'2014-04-26\')\n]</pre>\n\n<pre>{{eui-calendar selectedDatesBinding="selectedDates"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{selectedDatesBinding:"selectedDates"},hashTypes:{selectedDatesBinding:"STRING"},hashContexts:{selectedDatesBinding:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n<h4 id="section-shownextmonth">showNextMonth <span>boolean</span></h4>\n<p>\n  Show or hide the next month. Defaults to true.\n</p>\n\n<pre>{{eui-calendar showNextMonth=false}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{showNextMonth:!1},hashTypes:{showNextMonth:"BOOLEAN"},hashContexts:{showNextMonth:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-showprevmonth">showPrevMonth <span>boolean</span></h4>\n<p>\n  Show or hide the previous month. Defaults to false.\n</p>\n\n<pre>{{eui-calendar showPrevMonth=true}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-calendar"]||b&&b["eui-calendar"],g={hash:{showPrevMonth:!0,style:"popup"},hashTypes:{showPrevMonth:"BOOLEAN",style:"STRING"},hashContexts:{showPrevMonth:b,style:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-calendar",g)))),e.buffer.push("\n</div>\n"),h
})}),define("appkit/templates/documentation/checkbox",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-checkbox}}</h1>\n\n<div class="intro">\n  A reimplementation of the browser checkbox input to support custom styling and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-label">label</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-forcevalidate">forceValidate</a></li>\n</ul>\n\n\n<h4 id="section-class">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the checkbox.\n</p>\n\n\n<h4 id="section-label">label <span>string</span></h4>\n<p>\n  The text displayed next to the checkbox.\n</p>\n\n<pre>{{eui-checkbox label=\'Remember me\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Remember me"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the size of the checkbox.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>medium (default)</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  The aesthetic style of the button.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id="section-disabled">disabled <span>boolean</span></h4>\n<p>\n  Disables the checkbox.\n</p>\n\n<pre>{{eui-checkbox label=\'Enabled\' disabled=true}}\n{{eui-checkbox label=\'Checked\' value=true disabled=true}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Unchecked",disabled:!0},hashTypes:{label:"STRING",disabled:"BOOLEAN"},hashContexts:{label:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-checkbox"]||b&&b["eui-checkbox"],g={hash:{label:"Checked",value:!0,disabled:!0},hashTypes:{label:"STRING",value:"BOOLEAN",disabled:"BOOLEAN"},hashContexts:{label:b,value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-checkbox",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-forcevalidate">forceValidate <span>boolean</span></h4>\n<p>\n  If set to <em>true</em> the input will force validate its content even if the value is blank.\n</p>\n'),h})}),define("appkit/templates/documentation/dropbutton",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-dropbutton}}</h1>\n\n<div class="intro">\n  Combines the button and a popup into a dropbutton or splitbutton.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-label">label</a></li>\n  <li><a href="#section-listwidth">listWidth</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-icon">icon</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n  <li><a href="#section-loading">loading</a></li>\n\n  <li class="header">Actions</li>\n  <li><a href="#section-action">action</a></li>\n</ul>\n\n<h4 id="section-label">label <span>string</span></h4>\n<p>\n  The text displayed on the button. If there are is a primary event associated with the button the label for the primary event will be used instead.\n</p>\n\n<pre>{{eui-dropbutton label=\'Actions\' options=options}}\n{{eui-dropbutton label=\'Actions\' options=options}}</pre>\n\n<pre>options: [\n  Ember.Object.create({ label: \'Save\', action: \'save\' }),\n  Ember.Object.create({ label: \'Delete\', action: \'delete\' }),\n  Ember.Object.create({ label: \'Edit\', action: \'edit\' })\n],\n\noptionsPrimary: [\n  Ember.Object.create({ label: \'Save\', action: \'save\', primary: true }),\n  Ember.Object.create({ label: \'Delete\', action: \'delete\' }),\n  Ember.Object.create({ label: \'Edit\', action: \'edit\' })\n]</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",options:"options"},hashTypes:{label:"STRING",options:"ID"},hashContexts:{label:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",options:"optionsPrimary"},hashTypes:{label:"STRING",options:"ID"},hashContexts:{label:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-listwidth">listWidth <span>string</span></h4>\n<p>\n  Width of the popup. You must pass in a CSS size value with the unit. The select uses CSS box-sizing to ensure precentage-based sizes are actual sizes. A width smaller than the width of the button will be ignored.\n</p>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the size of the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",size:"small",options:"options"},hashTypes:{label:"STRING",size:"STRING",options:"ID"},hashContexts:{label:b,size:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",size:"small",options:"optionsPrimary"},hashTypes:{label:"STRING",size:"STRING",options:"ID"},hashContexts:{label:b,size:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  Controls the aesthetic style of the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"default",options:"options"},hashTypes:{label:"STRING",style:"STRING",options:"ID"},hashContexts:{label:b,style:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"default",options:"optionsPrimary"},hashTypes:{label:"STRING",style:"STRING",options:"ID"},hashContexts:{label:b,style:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"primary",options:"options"},hashTypes:{label:"STRING",style:"STRING",options:"ID"},hashContexts:{label:b,style:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",style:"primary",options:"optionsPrimary"},hashTypes:{label:"STRING",style:"STRING",options:"ID"},hashContexts:{label:b,style:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-icon">icon <span>string</span></h4>\n<p>\n  Displays an icon in front of the label. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<p>\n  There is one thing to consider when making use of an icon. Because the dropbutton already makes use of an icon to indicate a popup will open when clicked, it is not recommended that the button have both a label and an icon at the same time.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",icon:"fa fa-cog",options:"options"},hashTypes:{label:"STRING",icon:"STRING",options:"ID"},hashContexts:{label:b,icon:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<p>\n  Framing the label in such a way makes it look awkward. It is better to rely purely on an icon or a label.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{icon:"fa fa-cog",options:"options",listWidth:"60px"},hashTypes:{icon:"STRING",options:"ID",listWidth:"STRING"},hashContexts:{icon:b,options:b,listWidth:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<p>\n  Because the splitbutton uses a second button as a trigger for the popup it is ok to make use of an icon with the label.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{icon:"fa fa-save",options:"optionsPrimary"},hashTypes:{icon:"STRING",options:"ID"},hashContexts:{icon:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n<h4 id="section-disabled">disabled <span>boolean</span></h4>\n<p>\n  Disables the button. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",disabled:!0,options:"options"},hashTypes:{label:"STRING",disabled:"BOOLEAN",options:"ID"},hashContexts:{label:b,disabled:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",disabled:!0,options:"optionsPrimary"},hashTypes:{label:"STRING",disabled:"BOOLEAN",options:"ID"},hashContexts:{label:b,disabled:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-loading">loading <span>boolean</span></h4>\n<p>\n  See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"button","documentation.button",g):i.call(b,"link-to","button","documentation.button",g)))),e.buffer.push(' for usage instructions.\n</p>\n\n<p>\n  The dropbutton\'s loading state is identical to that of a regular button. If a splitbutton is put into a loading state only the left button is put into a loading state and the right one remains intact.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",loading:!0,options:"options"},hashTypes:{label:"STRING",loading:"BOOLEAN",options:"ID"},hashContexts:{label:b,loading:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",loading:!0,options:"optionsPrimary"},hashTypes:{label:"STRING",loading:"BOOLEAN",options:"ID"},hashContexts:{label:b,loading:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-action\">action <span>array</span></h4>\n<p>\n  The dropbutton takes an array of actions.\n</p>\n\n<pre>options: [\n    Ember.Object.create({ label: 'Save', action: 'save' }),\n    Ember.Object.create({ label: 'Delete', action: delete' }),\n    Ember.Object.create({ label: 'Edit', action: 'edit' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",options:"options"},hashTypes:{label:"STRING",options:"ID"},hashContexts:{label:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n<p>\n  Each action should have a label and action associated with it. You may optionally set one of the actions as the primary action and omit its label if you wish to use only an icon. If multiple actions are set as primary the first one will be taken and the rest treated as secondary actions.\n</p>\n\n<pre>optionsPrimary: [\n    Ember.Object.create({ label: 'Save', action: 'save', primary: true }),\n    Ember.Object.create({ label: 'Delete', action: 'delete' }),\n    Ember.Object.create({ label: 'Edit', action: 'edit' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{label:"Actions",options:"optionsPrimary"},hashTypes:{label:"STRING",options:"ID"},hashContexts:{label:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n\n<p>\n  If there is a primary action the button will act as a splitbutton, if no primary action is assigned it will behave as a dropbutton.\n</p>\n\n<p>\n  The context of the button gets passed through with the click and allows you to pass through information that the action can act on.\n</p>\n\n<pre>{{eui-dropbutton options=optionsPrimary item='item 1'}}</pre>\n\n<pre>optionsContext: [\n  Ember.Object.create({ label: 'Save', action: 'saveItem', primary: true }),\n  Ember.Object.create({ label: 'Delete', action: 'deleteItem' }),\n  Ember.Object.create({ label: 'Edit', action: 'editItem' })\n]</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-dropbutton"]||b&&b["eui-dropbutton"],g={hash:{options:"optionsContext",item:"item 1"},hashTypes:{options:"ID",item:"STRING"},hashContexts:{options:b,item:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-dropbutton",g)))),e.buffer.push("\n</div>\n"),h})}),define("appkit/templates/documentation/errorhandling",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push("<h1>Error Handling</h1>\n\n<div class=\"intro\">\n  Greatly speed up form validation and general error handling while also improving the usability of your applications.\n</div>\n\n<h2>Logic</h2>\n\n<p>\n  When the page loads inputs are in a normal state. For the form element to get highlighted in red or an error message to show up the element needs to enter an errror state. Entering and leaving the error state happens based on a set of conditions.\n</p>\n\n<ul>\n  <li>\n    <strong>Page load</strong>\n    <ul>\n      <li>Element has a value: calculate and update error state</li>\n      <li>Element has no value: don't do anything</li>\n    </ul>\n  </li>\n  <li>\n    <strong>Element value change</strong>\n    <ul>\n      <li>Element currently not in an error state: don't do anything</li>\n      <li>Element currently in an error state: calculate and update error state on change</li>\n    </ul>\n  </li>\n  <li>\n    <strong>Element loses focus</strong>\n    <ul>\n      <li>Calculate and update error state</li>\n    </ul>\n  </li>\n  <li>\n    <strong>Validation is forced with forceValidation property</strong>\n    <ul>\n      <li>Calculate and update error state</li>\n    </ul>\n  </li>\n</ul>\n\n<p>\n  We do not calculate or enter an error state for inputs that are blank on page load because the user has had no chance to interact with them yet.\n</p>\n<p>\n  This also applies when the user is entering data into an elment not currently in an error state. We don't trigger an error as soon as the user starts typing but give them a chance to finish first. Thus the first error check happens when the element loses focus.\n</p>\n\n\n<h2>error</h2>\n\n<p>\n  To enter the error state simply return true for the <em>error</em> property. Remember, if the element has no value then <em>error</em> will not be evaluated on page load.\n</p>\n\n<pre>{{eui-input value='' error=true placeholder=\"Will error on focus out\"}}\n{{eui-input value='john@example' error=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"",error:!0,placeholder:"Will error on focus out"},hashTypes:{value:"STRING",error:"BOOLEAN",placeholder:"STRING"},hashContexts:{value:b,error:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"john@example",error:!0},hashTypes:{value:"STRING",error:"BOOLEAN"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n<p>\n  You can also return a string instead of a boolean value in order to show an error message.\n</p>\n\n<pre>{{eui-input value=\'dog\' error="Please enter a valid location"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"dog",error:"Please enter a valid location"},hashTypes:{value:"STRING",error:"STRING"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n<p>\n  Both of these examples used a fixed value for <em>error</em> so the error state cannot change. If we instead make use of Ember's data bindings we can create an input that updates its error state dynamically:\n</p>\n\n<pre>{{eui-input value=email error=emailValid}}</pre>\n\n<pre>email: 'john@example',\n\nemailValid: function() {\n  var emailpat = /^[^@]+@[^@]+\\.[^@\\.]{2,}$/;\n  var email = this.get('email');\n\n  if (email.match(emailpat)) {\n    return false;\n  } else {\n    return 'We need a valid email address';\n  }\n}.property('email')</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"email",error:"emailValid"},hashTypes:{value:"ID",error:"ID"},hashContexts:{value:b,error:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n<br />\n\n<p>\n  You can use a validation library such as <a href="https://github.com/dockyard/ember-validations">Ember Validations</a> in conjunction with <em>error</em> for succinct error handling.\n</p>\n'),h})}),define("appkit/templates/documentation/index",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push('<h1>Philosophy</h1>\n\n<p>\n  EmberUI was designed to make building complex web applications simple. Web applications share a common set of components that are needed over and over again. It used to be that you would stitch together a variety of jQuery plugins of dubious quality to make your application function, but that does not lead to great experiences. There needs to be a better way.\n</p>\n<p>\n  EmberUI tries to to be this library&mdash;a uniform set of components that can be depended on to be of very high quality and flexible in their design. Each component\'s feature set is carefully considered and a ton of attention is paid to the design to make it both usable and "fun".\n</p>\n<p>\n  Because of our design-first approach EmberUI is going to be opinionated. There are some common design decisions that we no longer consider good design that will not make their way into EmberUI. For example, optgroups for selects or text inputs for date selectors.\n</p>\n\n<h3>What EmberUI is not</h3>\n<p>\n  EmberUI is not a CSS framework. It will not assist you in laying out or styling your application. Ambitious interfaces require creativity and CSS frameworks prevent that. Having said that you may use EmberUI in conjuction with a CSS framework.\n</p>\n\n\n<h1>Getting Started</h1>\n\n<p>\n  EmberUI uses <a href="https://github.com/joliss/broccoli">Broccoli</a> for its build process. It makes use of <em>broccoli-dist-es6-module</em> to automatically build AMD, Named AMD, and CommonJS modules. There is also a global version available. If you don\'t know what this is, use the global version.\n</p>\n\n<h3>Installation</h3>\n\n<pre>$ bower install emberui</pre>\n\n<p>\n  or just grab your preferred distribution from the <a href="https://github.com/emberui/emberui/tree/master/dist">Github repository</a>. Then include the scripts in <em>app.js</em>.\n</p>\n\n<h6>AMD</h6>\n\n<p>\n  Register emberui as a <a href="http://requirejs.org/docs/api.html#packages">package</a>, then:\n</p>\n\n<pre>define([\'emberui\'], ...)</pre>\n\n<h6>Named AMD</h6>\n\n<pre>import emberui from \'emberui\';</pre>\n\n<h6>Globals</h6>\n\n<pre>&lt;script src="bower_components/emberui/dist/globals/main.js"&gt;</script></pre>\n\n<br>\n\n<p>\n  There are also some css files that need to be included. The <em>emberui.css</em> stylesheet is required, but <em>default-theme.css</em> is optional if you are creating your own theme.\n</p>\n\n<pre>\n  &lt;link rel="stylesheet" href="/bower_components/emberui/dist/emberui.css"&gt;\n  &lt;link rel="stylesheet" href="/bower_components/emberui/dist/default-theme.css"&gt;\n</pre>\n\n<h3>Dependencies</h3>\n\n<p>\n  We try to limit dependencies other than Ember as much as possible. In the future we would like to eliminate them, but they have made getting to this point much faster.\n</p>\n\n<ul class="dependencies">\n  <li>\n    <a href="http://handlebarsjs.com">Handlebars</a> (the full one, not the runtime)\n    <p>\n      EmberUI makes use of the <em>template</em> tag and thus currently requires the full Handlebars runtime to work. If you get <em>Uncaught TypeError: Object #<c> has no method \'compile\' </em> this is your problem.\n    </p>\n  </li>\n  <li>\n    <a href="https://github.com/emberjs/list-view">list-view</a>\n    <p>\n      An internal component uses <em>list-view</em> to incrementally render itself. <em>list-view</em> is not packaged into EmberUI. You need to install it seperately.\n    </p>\n  <li>\n    <a href="fontawesome.io">FontAwesome</a>\n    <p>\n      Icons used by EmberUI such as the <em>select</em> and <em>dropbutton</em> arrows make use of FrontAwesome. It is overkill to include an entire icon font just for two icons so in the future we would like to eliminate this need either by creating out own icon font, or making use of svg icons.\n    </p>\n  </li>\n</ul>\n\n\n\n<h1>Design Files</h1>\n\n<p>\n  You can use these PSDs to make mocking up layouts with EmberUI super fast. There is one PSD for each form element and it contains the element in all its possible states and variations. EmberUI is under heavy development so it is possible that not all variations shown in the PSDs are currently implemented.\n</p>\n\n<ul class="filelist">\n  <li class="fa fa-download">\n    <a href="/assets/psds/button.psd">Button</a>\n  </li>\n  <li class="fa fa-download">\n    <a href="/assets/psds/checkbox.psd">Checkbox</a>\n  </li>\n  <li class="fa fa-download">\n    <a href="/assets/psds/input.psd">Input</a>\n  </li>\n  <li class="fa fa-download">\n    <a href="/assets/psds/select.psd">Select</a>\n  </li>\n</ul>\n')})}),define("appkit/templates/documentation/input",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-input}}</h1>\n\n<div class="intro">\n  A reimplementation of the standard browser text input with added support for validation and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-width">width</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Attributes</li>\n  <li><a href="#section-type">type</a></li>\n  <li><a href="#section-placeholder">placeholder</a></li>\n  <li><a href="#section-value">value</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-forcevalidate">forceValidate</a></li>\n</ul>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  The overall size of the input. Width is set via the <a href="#section-width">width</a> parameter.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-input size='tiny'}}\n{{eui-input size='small'}}\n{{eui-input size='medium'}}\n{{eui-input size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"tiny"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"small"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"medium"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{size:"large"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-style\">style <span>string</span></h4>\n<p>\n  Aesthetic style of the input.\n</p>\n\n<h5>Values</h5>\n<ul class=\"defaults\">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id=\"section-width\">width <span>string</span></h4>\n<p>\n  Width of the input. You must pass in a CSS size value with the unit. The input uses CSS box-sizing to ensure precentage based sizes are actual sizes.\n</p>\n\n<pre>{{eui-input width='150px' placeholder='150px'}}\n{{eui-input width='15em' placeholder='15em'}}\n{{eui-input width='30%' placeholder='30%'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"150px",placeholder:"150px"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"15em",placeholder:"15em"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{width:"30%",placeholder:"30%"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the input.\n</p>\n\n<pre>{{eui-input placeholder='Email Address' disabled=true}}\n{{eui-input value='Email Address' disabled=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email Address",disabled:!0},hashTypes:{placeholder:"STRING",disabled:"BOOLEAN"},hashContexts:{placeholder:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"Email Address",disabled:!0},hashTypes:{value:"STRING",disabled:"BOOLEAN"},hashContexts:{value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-type">type <span>string</span></h4>\n<p>\n  Type of input. Any value entered will be assigned to the type attribute on the input element.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>text (default)</li>\n  <li>password</li>\n</ul>\n\n\n<h4 id="section-placeholder">placeholder <span>string</span></h4>\n<p>\n  Placeholder value for the input. Does not make use of the placeholder attribute, but instead reimplements the behaviour in html.\n</p>\n\n<pre>{{eui-input placeholder=\'Email address\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email address"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-value">value <span>string</span></h4>\n<p>\n  The value of the input.\n</p>\n\n<pre>{{eui-input value=\'john@example.com\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{value:"john@example.com"},hashTypes:{value:"STRING"},hashContexts:{value:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-forcevalidate">forceValidate <span>boolean</span></h4>\n<p>\n  If set to <em>true</em> the input will force validate its content even if the value is blank.\n</p>\n'),h})}),define("appkit/templates/documentation/layout",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};
var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>Layout</h1>\n\n<div class="intro">\n  All components are available in several sizes to allow for easy layout and a clear hierarchy.\n</div>\n\n<p>\n  EmberUI does not try to replicate what css frameworks such as Bootstrap try to do. Components are structured such that they are easy to use together, but if you are expecting a grid framework for layout you will not find it here.\n</p>\n\n<p>\n  EmberUI will work with css frameworks if you choose, but if you are writing an ambitious application then you probably should spend some time writing custom layout code and not rely on generic css.\n</p>\n\n<h2>Working with components</h2>\n\n<p>\n  All components are designed to work together when the same size is specified. If there is no line break they will flow onto the same line and align with each other.\n</p>\n\n<pre>{{eui-input placeholder="Name"}}\n{{eui-input placeholder="Email Address"}}\n{{eui-button label="Signup"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Name"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Email Address"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Signup"},hashTypes:{label:"STRING"},hashContexts:{label:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push('\n</div>\n\n<p>\n  Components are set to display as inline-block items via css. If you put two components of different sizes next to each other they will vertically align.\n</p>\n\n<pre>{{eui-input placeholder="Todo" size="large"}}\n{{eui-button label="Add" size="small"}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-input"]||b&&b["eui-input"],g={hash:{placeholder:"Todo",size:"large"},hashTypes:{placeholder:"STRING",size:"STRING"},hashContexts:{placeholder:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-input",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-button"]||b&&b["eui-button"],g={hash:{label:"Add",size:"small"},hashTypes:{label:"STRING",size:"STRING"},hashContexts:{label:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-button",g)))),e.buffer.push("\n</div>\n\n<p>\n  You probably would not want to mix sizes as demonstrated, but it is important to understand how components interact with each other.\n</p>\n"),h})}),define("appkit/templates/documentation/modal-example",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h,i="",j=c.helperMissing,k=this.escapeExpression;return e.buffer.push('<div style="padding: 50px; text-align: center;">\n  <h1>Hello '),f=c._triageMustache.call(b,"content.name",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("!</h1>\n\n  <br />\n\n  "),f=c._triageMustache.call(b,"content.message",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n\n  <br /><br /><br />\n\n  "),e.buffer.push(k((g=c["eui-button"]||b&&b["eui-button"],h={hash:{label:"Close Modal",action:"cancel"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},g?g.call(b,h):j.call(b,"eui-button",h)))),e.buffer.push("\n</div>\n"),i})}),define("appkit/templates/documentation/modal",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){var d,e,f="";return b.buffer.push('\n    <div style="padding: 50px; text-align: center;">\n      <p>\n        You may also press <em>esc</em> to close this modal.\n      </p>\n\n      '),b.buffer.push(l((d=c["eui-button"]||a&&a["eui-button"],e={hash:{label:"Close Modal",size:"small",action:"toggleFirstModal"},hashTypes:{label:"STRING",size:"STRING",action:"STRING"},hashContexts:{label:a,size:a,action:a},contexts:[],types:[],data:b},d?d.call(a,e):k.call(a,"eui-button",e)))),b.buffer.push("\n    </div>\n  "),f}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var g,h,i,j="",k=c.helperMissing,l=this.escapeExpression,m=this;return e.buffer.push('<h1>{{eui-modal}}</h1>\n\n<div class="intro">\n  A modal dialog that can be used as a block element or created programatically.\n</div>\n\n<p>\n  The modal is positioned in the center of the screen when it opens. It also disables page scrolling and prevents the user from tabbing outside the modal. This allows the modal to complete command the user\'s attention while it is open.\n</p>\n\n\n<h2>Block Element</h2>\n\n<p>\n  The simplest way to use the modal component is to use it like any other block component.\n</p>\n\n<pre>{{#eui-modal openBinding="showFirstModal" cancel="firstModalCancel"}}\n  &lt;div style="padding: 50px; text-align: center;">\n    &lt;p>\n      You may also press &lt;em>esc&lt;/em> to close this modal.\n    &lt;/p>\n\n    {{eui-button label="Close Modal" size="small" action="toggleFirstModal"}}\n  &lt;/div>\n{{/eui-modal}}\n\n{{eui-button label=\'Open "default" Style Modal\' action="toggleFirstModal"}}</pre>\n\n<pre>var route = Ember.Route.extend({\n  actions: {\n    toggleFirstModal: function() {\n      this.toggleProperty(\'controller.showFirstModal\');\n    },\n    firstModalCancel: function() {\n      console.log(\'You pressed ESC to close the first modal\');\n    }\n  }\n});</pre>\n\n<div class="output">\n  '),h=c["eui-modal"]||b&&b["eui-modal"],i={hash:{openBinding:"showFirstModal",cancel:"firstModalCancel"},hashTypes:{openBinding:"STRING",cancel:"STRING"},hashContexts:{openBinding:b,cancel:b},inverse:m.noop,fn:m.program(1,f,e),contexts:[],types:[],data:e},g=h?h.call(b,i):k.call(b,"eui-modal",i),(g||0===g)&&e.buffer.push(g),e.buffer.push("\n\n  "),e.buffer.push(l((h=c["eui-button"]||b&&b["eui-button"],i={hash:{label:'Open "default" Style Modal',action:"toggleFirstModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},h?h.call(b,i):k.call(b,"eui-button",i)))),e.buffer.push("\n</div>\n\n\n<h2>Programmatic</h2>\n\n<p>\n  A modal can be created programatically using using the <em>show</em> method. This is great if you want to do quick a prompt such as delete confirmations.\n</p>\n\n<pre>{{eui-button label='Open Modal' action='showFullModal'}}</pre>\n\n<pre>import modalContentTemplate from 'appkit/templates/documentation/modal-example'\n\nview = Ember.View.extend({\n  template: modalContentTemplate\n})\n</pre>\n\n<pre>import modalComponent from 'appkit/components/eui-modal'\nimport modalContentView from 'appkit/views/documentation/modal-example'\n\nactions: {\n  showFullModal: function() {\n    modalComponent.show({\n      targetObject: this\n      contentViewClass: modalContentView,\n      content: { name: \"Jaco\" },\n      cancel: 'resetData'\n    });\n  }\n}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(l((h=c["eui-button"]||b&&b["eui-button"],i={hash:{label:'Open "full" Style Modal',action:"showFullModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},h?h.call(b,i):k.call(b,"eui-button",i)))),e.buffer.push('\n</div>\n\n<p>\n  To close the modal you call the action <em>accept</em> or <em>cancel</em> from within the view.\n</p>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-class">class</a></li>\n  <li><a href="#section-style">style</a></li>\n\n  <li class="header">Parameters</li>\n  <li><a href="#section-targetobject">open</a></li>\n  <li><a href="#section-targetobject">targetObject</a></li>\n\n  <li class="header">Actions</li>\n  <li><a href="#section-accept">accept</a></li>\n  <li><a href="#section-cancel">cancel</a></li>\n</ul>\n\n\n<h4 id="section-label">class <span>string</span></h4>\n<p>\n  Assigns a custom CSS class to the modal.\n</p>\n\n\n<h4 id="section-isopen">style <span>string</span></h4>\n<p>\n  The aesthetic style of the modal.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (defaut)</li>\n  <li>full</li>\n</ul>\n<p>\n  Additional styles can be added via CSS. See '),e.buffer.push(l((h=c["link-to"]||b&&b["link-to"],i={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},h?h.call(b,"Theming","documentation.theming",i):k.call(b,"link-to","Theming","documentation.theming",i)))),e.buffer.push('\n</p>\n\n<div class="output">\n  '),e.buffer.push(l((h=c["eui-button"]||b&&b["eui-button"],i={hash:{label:"Default",action:"showModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},h?h.call(b,i):k.call(b,"eui-button",i)))),e.buffer.push("\n  "),e.buffer.push(l((h=c["eui-button"]||b&&b["eui-button"],i={hash:{label:"Full",action:"showFullModal"},hashTypes:{label:"STRING",action:"STRING"},hashContexts:{label:b,action:b},contexts:[],types:[],data:e},h?h.call(b,i):k.call(b,"eui-button",i)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-open">open <span>boolean</span></h4>\n<p>\n  Used to show and hide the modal when used as a block element. Defaults to <em>false</em> so if you want to show the dialog as soon as the relevant route is visited then you should set it to <em>true</em>.\n</p>\n\n\n<h4 id="section-targetobject">targetObject <span>object</span></h4>\n<p>\n  Only used if creating the modal programmatically. It sets the target for events triggered within the modal. Set it equal to <em>this</em> to have events handled in the context that opens the modal.\n</p>\n\n\n<h4 id="section-accept">accept <span>string</span></h4>\n<p>\n  You may manually call this action using regular action syntax. Only available if modal was created programatically.\n</p>\n\n\n<h4 id="section-cancel">cancel <span>string</span></h4>\n<p>\n  This action is automatically called if the user closes the dialog by pressing <em>esc</em>. If you created your modal programatically you may manually call this action using regular action syntax.\n</p>\n'),j})}),define("appkit/templates/documentation/select",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-select}}</h1>\n\n<div class="intro">\n  A reimplementation of the standard browser select with added support for validation, error handling, and search.\n</div>\n\n<p>\n  The <em>select</em> uses a popup to query the user\'s selection.\n</p>\n<p>\n  The <em>select</em> makes use of list-view to hande large amounts of data without performance hickups. To make it easy to navigate for the user search support is provided. Simply start typing while the <em>select</em> is open to filter the options.\n</p>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Countries",labelPath:"name",valuePath:"code",optionsBinding:"fullCountryList"},hashTypes:{placeholder:"STRING",labelPath:"STRING",valuePath:"STRING",optionsBinding:"STRING"},hashContexts:{placeholder:b,labelPath:b,valuePath:b,optionsBinding:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push('\n</div>\n\n<p>\n  The <em>select</em> prevents the page from scrolling while the cursor is over the select. Should the page scroll the select will be closed automatically.\n</p>\n\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-listwidth">listWidth</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-width">width</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Attributes</li>\n  <li><a href="#section-labelpath">labelPath</a></li>\n  <li><a href="#section-options">options</a></li>\n  <li><a href="#section-placeholder">placeholder</a></li>\n  <li><a href="#section-selection">selection</a></li>\n  <li><a href="#section-value">value</a></li>\n  <li><a href="#section-valuepath">valuePath</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-forcevalidate">forceValidate</a></li>\n</ul>\n\n<h4 id="section-listwidth">listWidth <span>string</span></h4>\n<p>\n  Width of the popup. You must pass in a CSS size value with the unit. The select uses CSS box-sizing to ensure precentage-based sizes are actual sizes. A width smaller than the width of the select will be ignored.\n</p>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  The overall size of the select. Width is set via the <a href="#section-width">width</a> parameter. Each size has an associated width it will use unless you override it.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push('\n</p>\n\n<pre>{{eui-select placeholder="Select a country" options=countries size=\'tiny\'}}\n{{eui-select placeholder="Select a country" options=countries size=\'small\'}}\n{{eui-select placeholder="Select a country" options=countries size=\'medium\'}}\n{{eui-select placeholder="Select a country" options=countries size=\'large\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select a country",options:"countries",size:"tiny"},hashTypes:{placeholder:"STRING",options:"ID",size:"STRING"},hashContexts:{placeholder:b,options:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select a country",options:"countries",size:"small"},hashTypes:{placeholder:"STRING",options:"ID",size:"STRING"},hashContexts:{placeholder:b,options:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select a country",options:"countries",size:"medium"},hashTypes:{placeholder:"STRING",options:"ID",size:"STRING"},hashContexts:{placeholder:b,options:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select a country",options:"countries",size:"large"},hashTypes:{placeholder:"STRING",options:"ID",size:"STRING"},hashContexts:{placeholder:b,options:b,size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-style\">style <span>string</span></h4>\n<p>\n  Aesthetic style of the select.\n</p>\n\n<h5>Values</h5>\n<ul class=\"defaults\">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id=\"section-width\">width <span>string</span></h4>\n<p>\n  Width of the select. You must pass in a CSS size value with the unit. The select uses CSS box-sizing to ensure precentage-based sizes are actual sizes.\n</p>\n\n<pre>{{eui-input width='150px' placeholder='150px'}}\n{{eui-input width='15em' placeholder='15em'}}\n{{eui-input width='30%' placeholder='30%'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{options:"countries",width:"150px",placeholder:"150px"},hashTypes:{options:"ID",width:"STRING",placeholder:"STRING"},hashContexts:{options:b,width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{options:"countries",width:"15em",placeholder:"15em"},hashTypes:{options:"ID",width:"STRING",placeholder:"STRING"},hashContexts:{options:b,width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{options:"countries",width:"30%",placeholder:"30%"},hashTypes:{options:"ID",width:"STRING",placeholder:"STRING"},hashContexts:{options:b,width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-disabled">disabled <span>boolean</span></h4>\n<p>\n  Disables the select.\n</p>\n\n<pre>{{eui-select options=countries placeholder=\'Country\' disabled=true}}\n{{eui-select options=countries disabled=true value=1}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{options:"countries",placeholder:"Select a Country",disabled:!0},hashTypes:{options:"ID",placeholder:"STRING",disabled:"BOOLEAN"},hashContexts:{options:b,placeholder:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{options:"countries",disabled:!0,value:1},hashTypes:{options:"ID",disabled:"BOOLEAN",value:"INTEGER"},hashContexts:{options:b,disabled:b,value:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-labelpath\">labelPath <span>string</span></h4>\n<p>\n  Path to the label property for each of the <em>options</em>. Default path is 'label'.\n</p>\n\n\n<h4 id=\"section-options\">options <span>array</span></h4>\n<p>\n  An array of options for the user to select from.\n</p>\n\n<pre>countries: [\n  { label: 'Canada', value: 1 }\n  { label: 'United Sates', value: 2 }\n  { label: 'Mexico', value: 3 }\n]</pre>\n\n<pre>users: [\n  Ember.Object.create({\n    name: 'John',\n    email: 'john@gmail.com',\n    value: '1'\n  }), Ember.Object.create({\n    name: 'Mark',\n    email: 'mark@gmail.com',\n    value: '2'\n  }), Ember.Object.create({\n    name: 'Richard',\n    email: 'richard@gmail.com',\n    value: '3'\n  })\n]</pre>\n\n<p>\n  You will also need to specify the path to the label property using <em>labelPath</em>.\n</p>\n\n<pre>{{eui-select placeholder=\"Select by name\" options=users labelPath='name'}}\n{{eui-select placeholder=\"Select by email\" options=users labelPath='email'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select by name",options:"users",labelPath:"name"},hashTypes:{placeholder:"STRING",options:"ID",labelPath:"STRING"},hashContexts:{placeholder:b,options:b,labelPath:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select by email",options:"users",labelPath:"email"},hashTypes:{placeholder:"STRING",options:"ID",labelPath:"STRING"},hashContexts:{placeholder:b,options:b,labelPath:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-placeholder">placeholder <span>string</span></h4>\n<p>\n  Placeholder value for the select.\n</p>\n\n<pre>{{eui-select placeholder=\'Select a Country\' options=countries}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-select"]||b&&b["eui-select"],g={hash:{placeholder:"Select a Country",options:"countries"},hashTypes:{placeholder:"STRING",options:"ID"},hashContexts:{placeholder:b,options:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-select",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-selection">selection <span>object</span></h4>\n<p>\n  The currently selected option. <em>null</em> if nothing is selected.\n</p>\n\n\n<h4 id="section-value">value <span>object</span></h4>\n<p>\n  Uses the <em>valuePath</em> property to look up the value of the current <em>selection</em>.\n</p>\n<p>\n  If you do not specify a <em>selection</em> for the select, then the <em>value</em> and <em>valuePath</em> properties will be used to find the option that corresponds with the value in the list of <em>options</em>. The corresponding option will then be assigned to the <em>selection</em> as its initial value.\n</p>\n\n\n<h4 id="section-valuepath">valuePath <span>string</span></h4>\n<p>\n  Path to the value property for each of the <em>options</em>. Default path is \'value\'.\n</p>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-forcevalidate">forceValidate <span>boolean</span></h4>\n<p>\n  If set to <em>true</em> the select will force validate its content even if the value is blank.\n</p>\n'),h})}),define("appkit/templates/documentation/textarea",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g,h="",i=c.helperMissing,j=this.escapeExpression;return e.buffer.push('<h1>{{eui-textarea}}</h1>\n\n<div class="intro">\n  A reimplementation of the standard browser textarea with added support for validation and error handling.\n</div>\n\n<h2>Parameters</h2>\n\n<ul class="parameterindex">\n  <li class="header">Attributes</li>\n  <li><a href="#section-placeholder">placeholder</a></li>\n  <li><a href="#section-value">value</a></li>\n\n  <li class="header">Aesthetic</li>\n  <li><a href="#section-style">style</a></li>\n  <li><a href="#section-size">size</a></li>\n  <li><a href="#section-width">width</a></li>\n  <li><a href="#section-height">height</a></li>\n\n  <li class="header">States</li>\n  <li><a href="#section-disabled">disabled</a></li>\n\n  <li class="header">Error Handling</li>\n  <li><a href="#section-error">error</a></li>\n  <li><a href="#section-forcevalidate">forceValidate</a></li>\n</ul>\n\n\n<h4 id="section-placeholder">placeholder <span>string</span></h4>\n<p>\n  Placeholder value for the textarea. Does not make use of the placeholder attribute, but instead reimplements the behaviour in html.\n</p>\n\n<pre>{{eui-textarea placeholder=\'Message\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{placeholder:"Message"},hashTypes:{placeholder:"STRING"},hashContexts:{placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-value">value <span>string</span></h4>\n<p>\n  The value of the textarea.\n</p>\n\n<pre>{{eui-textarea value=\'Hey John\'}}</pre>\n\n<div class="output">\n  '),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{value:"Hey John"},hashTypes:{value:"STRING"},hashContexts:{value:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-style">style <span>string</span></h4>\n<p>\n  Aesthetic style of the textarea.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>default (default)</li>\n</ul>\n\n\n<h4 id="section-size">size <span>string</span></h4>\n<p>\n  Controls the overall size of the textarea. Width is set via the width parameter.\n</p>\n\n<h5>Values</h5>\n<ul class="defaults">\n  <li>tiny</li>\n  <li>small</li>\n  <li>medium (default)</li>\n  <li>large</li>\n</ul>\n<p>\n  Additional sizes can be added via CSS. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Theming","documentation.theming",g):i.call(b,"link-to","Theming","documentation.theming",g)))),e.buffer.push("\n</p>\n\n<pre>{{eui-textarea size='tiny'}}\n{{eui-textarea size='small'}}\n{{eui-textarea size='medium'}}\n{{eui-textarea size='large'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"tiny"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"small"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"medium"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{size:"large"},hashTypes:{size:"STRING"},hashContexts:{size:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-width\">width <span>string</span></h4>\n<p>\n  Width of the textarea. You must pass in a CSS size value with the unit. Textarea uses CSS box-sizing to ensure precentage-based sizes are actual sizes.\n</p>\n\n<pre>{{eui-textarea width='150px' placeholder='150px'}}\n{{eui-textarea width='15em' placeholder='15em'}}\n{{eui-textarea width='30%' placeholder='30%'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"150px",placeholder:"150px"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"15em",placeholder:"15em"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{width:"30%",placeholder:"30%"},hashTypes:{width:"STRING",placeholder:"STRING"},hashContexts:{width:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-height\">height <span>string</span></h4>\n<p>\n  Height of the textarea. You must pass in a CSS size value with the unit. Textarea uses CSS box-sizing to ensure precentage-based sizes are actual sizes.\n</p>\n\n<pre>{{eui-textarea height='50px' placeholder='50px'}}\n{{eui-textarea height='5em' placeholder='5em'}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{height:"50px",placeholder:"50px"},hashTypes:{height:"STRING",placeholder:"STRING"},hashContexts:{height:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{height:"5em",placeholder:"5em"},hashTypes:{height:"STRING",placeholder:"STRING"},hashContexts:{height:b,placeholder:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n</div>\n\n\n<h4 id=\"section-disabled\">disabled <span>boolean</span></h4>\n<p>\n  Disables the textarea.\n</p>\n\n<pre>{{eui-textarea placeholder='Message' disabled=true}}\n{{eui-textarea value='Hey John' disabled=true}}</pre>\n\n<div class=\"output\">\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{placeholder:"Message",disabled:!0},hashTypes:{placeholder:"STRING",disabled:"BOOLEAN"},hashContexts:{placeholder:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push("\n  "),e.buffer.push(j((f=c["eui-textarea"]||b&&b["eui-textarea"],g={hash:{value:"Hey John",disabled:!0},hashTypes:{value:"STRING",disabled:"BOOLEAN"},hashContexts:{value:b,disabled:b},contexts:[],types:[],data:e},f?f.call(b,g):i.call(b,"eui-textarea",g)))),e.buffer.push('\n</div>\n\n\n<h4 id="section-error">error <span>boolean | string</span></h4>\n<p>\n  Responsible for validation and error handling. See '),e.buffer.push(j((f=c["link-to"]||b&&b["link-to"],g={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},f?f.call(b,"Error Handling","documentation.errorhandling",g):i.call(b,"link-to","Error Handling","documentation.errorhandling",g)))),e.buffer.push('\n</p>\n\n\n<h4 id="section-forcevalidate">forceValidate <span>boolean</span></h4>\n<p>\n  If set to <em>true</em> the textarea will force validate its content even if the value is blank.\n</p>\n'),h})}),define("appkit/templates/documentation/theming",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f="";return e.buffer.push('<h1>Theming</h1>\n\n<div class="intro">\n  Extend upon the existing aesthetic style or replace it completely with a custom theme.\n</div>\n\n<h2>Extending the default theme</h2>\n\n<p>\n  Every component has a style attribute. For concise css scoping, this value is prefixed with <em>eui-</em> and added as a class to the main container element of the component.\n</p>\n<p>\n  For example, the button component has two supported style attributes: <em>default</em> and <em>primary</em>. If you specify the <em>primary</em> style then the final markup for the button, ignoring metamorph tags, would look something like this:\n</p>\n\n<pre>{{eui-button label="Save Changes" style="primary"}}</pre>\n\n<pre>&lt;button class="eui-button eui-primary eui-medium">\n  &lt;div class="eui-wrapper">\n    &lt;i>\n      Save Changes\n    &lt;/i>\n  &lt;/div>\n&lt;/button></pre>\n\n<p>However, you can specify any value you like and it will be set as the class prefixed with <em>eui-</em>. If you do not supply a style paramater then the default class will automatically be added.\n</p>\n<p>\n  The same logic applies for the size paramater as well. By default <em>tiny</em>, <em>small</em>, <em>medium</em> (default value), and <em>large</em> are supported. However, if you wanted to add a <em>gigantic</em> size simply specify it:\n</p>\n\n<pre>{{eui-button label="Save Changes" size="gigantic"}}</pre>\n\n<pre>&lt;button class="eui-button eui-default eui-gigantic">\n  &lt;div class="eui-wrapper">\n    &lt;i>\n      Save Changes\n    &lt;/i>\n  &lt;/div>\n&lt;/button></pre>\n\n<p>\n  Then add the relevant css classes to support the new size to your theme file. Your css would look something like this:\n</p>\n\n<pre> .eui-button.eui-gigantic {\n  border-radius: 7px;\n  padding: 1px;\n\n  .eui-wrapper {\n    height: 70px;\n    line-height: 70px;\n    padding: 0 30px;\n    min-width: 5px;\n\n    &.eui-no-label .eui-wrapper {\n      padding: 0 20px;\n    }\n  }\n}</pre>\n\n<p>\n  You should scope your sizes to the component type to avoid style interference. Creating additional styles can be quite involved if you want to suppose the full range of features, but it will pay off in the long run.\n</p>\n\n<h2>Creating a new theme</h2>\n\n<p>\n  To facilitate creating a completely different theme the css for EmberUI has been split into a base and theme file set. The base set is restricted to only the css necessary to support the feature set and provide an easy starting point for styling a new theme.\n</p>\n<p>\n  The default theme set contains some very complex styles to support its visual aesthetic. If you plan to create a lot of custom styles it may be easier to delete the default theme and create your own.\n</p>\n'),f
})}),define("appkit/templates/error",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var f,g="";return e.buffer.push("<h1>Sorry, Something went wrong</h1>\n"),f=c._triageMustache.call(b,"message",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n<pre>\n"),f=c._triageMustache.call(b,"stack",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["ID"],data:e}),(f||0===f)&&e.buffer.push(f),e.buffer.push("\n</pre>\n"),g})}),define("appkit/templates/index",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){function f(a,b){b.buffer.push("Getting Started")}function g(a,b){b.buffer.push("original design documents")}this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{};var h,i,j,k="",l=this.escapeExpression,m=c.helperMissing,n=this;return e.buffer.push("<div "),e.buffer.push(l(c["bind-attr"].call(b,{hash:{"class":":banner isDemoActive:demo"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[],types:[],data:e}))),e.buffer.push('>\n  <div class="site-navigation">\n    <div class="container">\n      '),e.buffer.push(l((i=c["link-to"]||b&&b["link-to"],j={hash:{"class":"logo"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[b,b],types:["STRING","STRING"],data:e},i?i.call(b,"EmberUI","index",j):m.call(b,"link-to","EmberUI","index",j)))),e.buffer.push('\n      <div class="show-links fa fa-bars fa-2x" '),e.buffer.push(l(c.action.call(b,"toggleNavigation",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["STRING"],data:e}))),e.buffer.push("></div>\n      <ul "),e.buffer.push(l(c["bind-attr"].call(b,{hash:{"class":"showNavigation:active"},hashTypes:{"class":"STRING"},hashContexts:{"class":b},contexts:[],types:[],data:e}))),e.buffer.push(">\n        <li>"),e.buffer.push(l((i=c["link-to"]||b&&b["link-to"],j={hash:{},hashTypes:{},hashContexts:{},contexts:[b,b],types:["STRING","STRING"],data:e},i?i.call(b,"Documentation","documentation",j):m.call(b,"link-to","Documentation","documentation",j)))),e.buffer.push('</li>\n        <li><a href="https://medium.com/emberui-updates/">Blog</a></li>\n        <li><a href="https://github.com/emberui/emberui">Fork it!</a></li>\n      </ul>\n    </div>\n  </div>\n\n  <div class="slide1">\n    <div class="flexwrapper">\n      <div class="flexobject">\n        <h1>EmberUI</h1>\n        <h2>A component library for crafting <br /> ambitious interfaces.</h2>\n        <br />\n        <div class="demo" '),e.buffer.push(l(c.action.call(b,"showDemo",{hash:{},hashTypes:{},hashContexts:{},contexts:[b],types:["STRING"],data:e}))),e.buffer.push('><span>Launch Demo</span></div>\n      </div>\n    </div>\n\n    <div class="download">\n      <div class="container">\n        <ul>\n          <li><strong>0.1.0</strong>: <a href="https://github.com/emberui/emberui/archive/master.zip">Download</a></li>\n          <li>'),i=c["link-to"]||b&&b["link-to"],j={hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(1,f,e),contexts:[b],types:["STRING"],data:e},h=i?i.call(b,"documentation",j):m.call(b,"link-to","documentation",j),(h||0===h)&&e.buffer.push(h),e.buffer.push('</li>\n          <li><a href="http://venn.lc">Built by Venn</a>\n      </div>\n    </div>\n  </div>\n\n  <div class="slide2">\n    <iframe src="http://emberui.github.io/demo/" style="background: none; width: 100%; height: 100%;"></iframe>\n  </div>\n\n  <canvas id="backgroundcanvas" class="background"></canvas>\n</div>\n\n<div class="container">\n  <div class="bar designed">\n    <div class="copy">\n      <h2>Not just built, designed</h2>\n      <p>\n        It is the small details that makes the difference between good enough and great.  Each component has been constructed with incredible detail to make sure it feels and performs like a native component.\n      </p>\n      <p>\n        We have included functionality such as fluid animations, real-time error handling, loading states, and keyboard navigation to give your application an extra spot of polish.\n      </p>\n    </div>\n    <pre class="example">{{<span class="tag">eui-button</span>\n  label=<span class="string">"Save Changes"</span>\n  style=<span class="string">"primary"</span>\n  size=<span class="string">"large"</span>\n  icon=<span class="string">"fa fa-upload"</span>  <span class="comment">// Using FontAwesome</span>\n  loadingBinding=<span class="string">"isLoading"</span>\n  disabledBinding=<span class="string">"formIsIncomplete"</span>\n  class=<span class="string">"save-button"</span>\n  action=<span class="string">"save"</span>}}</pre>\n  </div>\n</div>\n\n<div class="bar customize">\n  <div class="container">\n    <div class="copy">\n      <h2>Customizeable to the core</h2>\n      <p>\n        While the default aesthetic was designed to work in as many environments as possible, EmberUI is built to be extended upon. Expand upon the default styles or replace them completely.\n      </p>\n    </div>\n\n    <div class="components"><img src="/assets/images/components.png" width="348.5" height="355" alt=""/></div>\n  </div>\n</div>\n\n<div class="container">\n  <div class="column">\n    <h3>Design mockups with ease</h3>\n    <p>\n      Use the '),i=c["link-to"]||b&&b["link-to"],j={hash:{},hashTypes:{},hashContexts:{},inverse:n.noop,fn:n.program(3,g,e),contexts:[b],types:["STRING"],data:e},h=i?i.call(b,"documentation",j):m.call(b,"link-to","documentation",j),(h||0===h)&&e.buffer.push(h),e.buffer.push(' and quickly create mockups in Photoshop. Available as 144dpi PSDs.\n    </p>\n  </div>\n\n  <div class="column">\n    <h3>Works on all modern bowsers</h3>\n    <p>\n      EmberUI support Internet Explorer 9+, Chrome, Firefox, Opera, and any other bowser that follows standards.\n    </p>\n  </div>\n\n  <div class="column">\n    <h3>Built by Venn</h3>\n    <p>\n      <a href="http://venn.lc">We</a> built EmberUI to use in real client projects so you can be sure it will be actively developed for a long time.\n    </p>\n  </div>\n</div>\n'),k})}),define("appkit/templates/loading",["exports"],function(a){a["default"]=Ember.Handlebars.template(function(a,b,c,d,e){this.compilerInfo=[4,">= 1.0.0"],c=this.merge(c,Ember.Handlebars.helpers),e=e||{},e.buffer.push("<h1>Loading...</h1>\n")})});